`timescale 1ns / 1ps

module MIPS32_tb;

  // Inputs
  reg clk1;
  reg clk2;

  // Outputs
  wire [31:0] Answer;

  // Instantiate the MIPS32 module
  MIPS32 uut (
    .clk1(clk1),
    .clk2(clk2),
    .Answer(Answer)
  );

  // Initialize the clock signals
  initial begin
    clk1 = 0;
    clk2 = 0;
  end

  always #5 clk1 = ~clk1; // 10 ns clock period for clk1
  always #10 clk2 = ~clk2; // 20 ns clock period for clk2

  // Test the MAC operation
  initial begin
    // Initialize the memory and registers for the test
    uut.PC = 0;
    uut.HALTED = 0;
    uut.TAKEN_BRANCH = 0;

    // Initialize registers
    uut.Reg[1] = 32'd10; // Register 1 (R1) = 10
    uut.Reg[2] = 32'd20; // Register 2 (R2) = 20
    uut.Reg[3] = 32'd5;  // Register 3 (R3) = 5 (accumulator)

    // Initialize memory with an MUL and ADD instruction
    // MUL R4, R1, R2 -> opcode (MUL) = 000101, R1 = 00001, R2 = 00010, R4 = 00100
    uut.Mem[0] = {6'b000101, 5'd1, 5'd2, 5'd4, 11'd0};
    // ADD R3, R3, R4 -> opcode (ADD) = 000000, R3 = 00011, R4 = 00100, R3 = 00011
    uut.Mem[1] = {6'b000000, 5'd3, 5'd4, 5'd3, 11'd0};
    #200;
    $finish;
  end

endmodule
