module tb(

    );
    reg clk1,clk2;
    wire [31:0] Answer;
    integer k;
    MIPS32 dut(clk1,clk2,Answer);
    
    initial 
    begin
     clk1=0;clk2=0;
     repeat (20)
     begin 
     #5 clk1=1;
     #5 clk1=0;
     #5 clk2=1;
     #5 clk2=0;
     end
     end
     initial
     begin
     for(k=0;k<31;k=k+1)
     MIPS32.Reg[k]=k;
     MIPS32.Mem[0]=32'h2801000a;
     MIPS32.Mem[1]=32'h28020014;
     MIPS32.Mem[2]=32'h28030019;
     MIPS32.Mem[3]=32'h0ce77800; //dummy instruction
     MIPS32.Mem[4]=32'h0ce77800; //dummy instruction
     MIPS32.Mem[5]=32'h00222000;
     MIPS32.Mem[6]=32'h0ce77800; //dummy instruction
     MIPS32.Mem[7]=32'h00832800;
     MIPS32.Mem[8]=32'hfc000000;
     MIPS32.HALTED=0;
     MIPS32.PC=0;
     MIPS32.TAKEN_BRANCH=0;
     
     #280
     for(k=0;k<6;k=k+1)
     $display("R%1d-%2d",k,MIPS32.Reg[k]);
     end
     
     
endmodule
